library(ggplot2)
library(lubridate)
library(dplyr)
library(tidyr)
library(data.table)
mytheme <- theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_blank())# element_line(colour="grey60", linetype="dashed"))
mytheme <- mytheme + theme(text=element_text(size=18)) + theme(axis.title.x=element_text(size=22) ,axis.title.y=element_text(size=22))
mytheme <- mytheme + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank() )
mytheme <- mytheme + theme( panel.background = element_rect(fill="white"), panel.border = element_rect(colour="black", fill=NA, size=1))
setwd("~/Onedrive/sampler/cases/ebswp")
source("../../sampleR/R/sampler.R")
getwd()
source("../../sampleR/R/sampler.R")
Sampler(yr=2016,est=FALSE)
i=2016
tmp <- data.table(Get_Age(i)); tmp$yr <- i
tmp <- data.table(Get_LF(i)); tmp$yr <- i
cd <- (read.csv(paste("imported/akfincat.csv",sep=""),as.is=T,header=F))
View(cd)
cd <- (read.csv(paste("imported/akfincat.csv",sep=""),as.is=T,header=F))
hdr_cat <- read.csv("imported/hdr_cat.csv",as.is=T,header=F)
names(cd) <- hdr_cat
cd <- data.table(cd)
cd[FMP.Subarea=="BS",sum(wt_recorded),.(Year)]
cdf <- cd %>% filter(FMP.Area=="BSAI",Species.Group.Name=="Pollock") %>%
transmute(
area=Reporting.Area.Code,month=trunc(WED/100),
strata=ifelse(month<6,1,ifelse(area>519,2,3)),
catch=wt_recorded
)  %>% select(strata, catch) %>%
group_by(strata) %>% summarise(catch=sum(catch))
tbl_df(cdf)
cdf$catch/sum(cdf$catch )
cdf <- read.table("catage_all_str.csv",header=T)
cdf <- read.table("catage_all.csv",header=F)
cdf <- data.frame(cdf)
names(cdf) <- c("yr","sim",1:15)
cdf[,12] <-
rowsum(cdf[,12:17])
cdf[,12] <-  rowsum(cdf[,12:17])
cdf
str(cdf)
summary(cdf)
p <- ggplot(tdf,aes(x=Age,y=catch,fill=cohort)) #,group=Strata))
p <- p + geom_violin(aes(colour=cohort),width=1.1) + scale_colour_identity() + scale_fill_identity() #scale_fill_brewer(palette="Pastel2") # + scale_colour_manual(palette-"Pastel2") #scale_fill_discrete()
p <- p + facet_wrap(~yr) + mytheme
tbl_df(cdf)
tdf <- gather(cdf,Age,catch,3:17) %>% filter(as.integer(Age)>2,as.integer(Age)<11) %>% transmute(yr,sim,Age,catch,cohort=as.factor(yr-as.integer(Age)))
tdf$yr <- factor(tdf$yr,levels=c(seq(from=1991,to=2011,by=5),seq(from=1992,to=2012,by=5),seq(from=1993,to=2013,by=5),seq(from=1994,to=2014,by=5),seq(from=1995,to=2015,by=5)))
tbl_df(tdf)
p <- ggplot(tdf,aes(x=Age,y=catch,fill=cohort)) #,group=Strata))
p <- p + geom_violin(aes(colour=cohort),width=1.1) + scale_colour_identity() + scale_fill_identity() #scale_fill_brewer(palette="Pastel2") # + scale_colour_manual(palette-"Pastel2") #scale_fill_discrete()
p <- p + facet_wrap(~yr) + mytheme
p
library(ggplot2)
library(lubridate)
library(tidyverse)
library(data.table)
library(xtable)
mytheme <- theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_blank())# element_line(colour="grey60", linetype="dashed"))
mytheme <- mytheme + theme(text=element_text(size=18)) + theme(axis.title.x=element_text(size=22) ,axis.title.y=element_text(size=22))
mytheme <- mytheme + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank() )
mytheme <- mytheme + theme( panel.background = element_rect(fill="white"), panel.border = element_rect(colour="black", fill=NA, size=1))
#q()
#n
#setwd("~/Onedrive/ebswp/data/sampler/cases/ebswp")
setwd("~/Onedrive/sampler/cases/ebswp")
# source sampler.R
source("../../sampleR/R/sampler.R")
# Width should apply to tidy
# digits hopefully affects number of digits when using print
options(width=50, width.cutoff=50, digits = 3)
tidy.opts=list(blank=FALSE, width.cutoff=60, size='small')
library(pander)
library(knitr)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = knitr:::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) > n)) x = strwrap(x, width = n)
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
library(xtable)
library(tidyverse)
options(xtable.comment = FALSE)
library(TMB)
library(VAST)
install.packages(c("callr", "car", "digest", "fansi", "FNN", "ggthemes", "littler", "lme4", "mapview", "pkgconfig", "plotrix", "processx", "RcppArmadillo", "rlang", "sandwich", "scales", "spdep", "tinytex", "tmap", "tmaptools", "usethis", "XML"))
install.packages(c("callr", "car", "digest", "fansi", "FNN", "ggthemes", "littler", "lme4", "mapview", "pkgconfig", "plotrix", "processx", "RcppArmadillo", "rlang", "sandwich", "scales", "spdep", "tinytex", "tmap", "tmaptools", "usethis", "XML"))
install.packages(c("callr", "car", "digest", "fansi", "FNN", "ggthemes", "littler", "lme4", "mapview", "pkgconfig", "plotrix", "processx", "RcppArmadillo", "rlang", "sandwich", "scales", "spdep", "tinytex", "tmap", "tmaptools", "usethis", "XML"))
install.packages(c("callr", "car", "digest", "fansi", "FNN", "ggthemes", "littler", "lme4", "mapview", "pkgconfig", "plotrix", "processx", "RcppArmadillo", "rlang", "sandwich", "scales", "spdep", "tinytex", "tmap", "tmaptools", "usethis", "XML"))
install.packages(c("callr", "car", "digest", "fansi", "FNN", "ggthemes", "littler", "lme4", "mapview", "pkgconfig", "plotrix", "processx", "RcppArmadillo", "rlang", "sandwich", "scales", "spdep", "tinytex", "tmap", "tmaptools", "usethis", "XML"))
install.packages(c("callr", "car", "digest", "fansi", "FNN", "ggthemes", "littler", "lme4", "mapview", "pkgconfig", "plotrix", "processx", "RcppArmadillo", "rlang", "sandwich", "scales", "spdep", "tinytex", "tmap", "tmaptools", "usethis", "XML"))
install.packages(c("callr", "car", "digest", "fansi", "FNN", "ggthemes", "littler", "lme4", "mapview", "pkgconfig", "plotrix", "processx", "RcppArmadillo", "rlang", "sandwich", "scales", "spdep", "tinytex", "tmap", "tmaptools", "usethis", "XML"))
install.packages(c("callr", "car", "digest", "fansi", "FNN", "ggthemes", "littler", "lme4", "mapview", "pkgconfig", "plotrix", "processx", "RcppArmadillo", "rlang", "sandwich", "scales", "spdep", "tinytex", "tmap", "tmaptools", "usethis", "XML"))
install.packages(c("callr", "car", "digest", "fansi", "FNN", "ggthemes", "littler", "lme4", "mapview", "pkgconfig", "plotrix", "processx", "RcppArmadillo", "rlang", "sandwich", "scales", "spdep", "tinytex", "tmap", "tmaptools", "usethis", "XML"))
install.packages(c("callr", "car", "digest", "fansi", "FNN", "ggthemes", "littler", "lme4", "mapview", "pkgconfig", "plotrix", "processx", "RcppArmadillo", "rlang", "sandwich", "scales", "spdep", "tinytex", "tmap", "tmaptools", "usethis", "XML"))
install.packages(c("callr", "car", "digest", "fansi", "FNN", "ggthemes", "littler", "lme4", "mapview", "pkgconfig", "plotrix", "processx", "RcppArmadillo", "rlang", "sandwich", "scales", "spdep", "tinytex", "tmap", "tmaptools", "usethis", "XML"))
install.packages(c("callr", "car", "digest", "fansi", "FNN", "ggthemes", "littler", "lme4", "mapview", "pkgconfig", "plotrix", "processx", "RcppArmadillo", "rlang", "sandwich", "scales", "spdep", "tinytex", "tmap", "tmaptools", "usethis", "XML"))
library(tidyverse)
library(xtable)
library(TMB)
library(VAST)
source("http://www.math.ntnu.no/inla/givemeINLA.R")
install_github("kaskr/adcomp/TMB")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
source("http://www.math.ntnu.no/inla/givemeINLA.R")
install_github("kaskr/adcomp/TMB")
