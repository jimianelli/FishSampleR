{
    "collab_server" : "",
    "contents" : "#' Sampler for catch-age from fishery data\n#' \n#' Main code for merging data from obsint.debriefed_age and debriefed_length for sampler code\n#' requires catch, age, and length frequency data in \"import\" directory with naming convention\n#' catch2014.csv, len2014.csv, age2014.csv\n#' \n#' @param yr for year of sample construction\n#' @return estimates of absolute age compositions\n#' @author J Ianelli\n#' @export\n#' \n#' setwd()\nSampler <- function(yr=2014,do_all=TRUE,est=TRUE,maxlen=80,io=FALSE){\n  ctl_file  <- paste0(\"data/sam_\",yr,\".dat\")\n  if (do_all)\n  {\n    cd <- read.csv(paste(\"imported/catch\",yr,\".csv\",sep=\"\"),as.is=T,header=F)\n    hdr_cat <- read.csv(\"imported/hdr_cat.csv\",as.is=T,header=F)\n    aout_file <- paste(\"data/age\",yr,\".dat\",sep=\"\")\n    lout_file <- paste(\"data/len\",yr,\".dat\",sep=\"\")\n    # Length data massage\n    names(cd) <- hdr_cat\n    ldf       <- Get_LF(yr)\n    adf       <- Get_Age(yr)\n    #names(ldf)\n    #glimpse(ldf)\n    lout <- ldf %>% transmute(strata,haul,sex,len,freq)\n    write.table(lout,lout_file,quote=F,row.names=F,col.names=F)\n    # old format:\n    # aout <- adf %>% transmute(strata, area,cr=1,mm=1,dd=1,yy=yr,lat=55,lon=-165,age=ifelse(is.na(age),0,age),sex,spp=201,wt,len,x=1,y=1,haul)\n    # New format:\n     aout <- adf %>% transmute(strata, haul, sex, age, wt, len) \n    write.table(aout,aout_file,quote=F,row.names=F,col.names=F)\n  }\n    #----------------------------------\n    # Catch data massage names(ad) ;dim(ad)\n    # n records of age data and length data\n    lad <- dim(aout)[1]\n    lld <- dim(lout)[1]\n    nstrata <- 3\n    cdf <- cd %>% filter(FMP.Subarea==\"BS\",Year==yr) %>%\n      transmute(\n        area=Reporting.Area.Code,month=trunc(WED/100),\n        strata=ifelse(month<6,1,ifelse(area>519,2,3)), \n        catch=wt_recorded\n        )  %>% select(strata, catch) %>%\n      group_by(strata) %>% summarise(catch=sum(catch))\n    catch <- cdf$catch\n    #catch[1] <-  #Catch in stratum 1, A season all areas\n    #catch[2] <-  #Catch in stratum 2, B season areas 520 and higher (NW)\n    #catch[3] <-  #Catch in stratum 3, B season area 519 and lower (SE)\n    cat(sep= \" \\n\",\n        yr , aout_file , lout_file , lad , lld ,\n        1 , 15 , 20 , maxlen , nstrata ,\n        catch[1], catch[2], catch[3],\n        paste(\"results/Est_\",yr,\".dat\",sep=\"\"),\n        file = ctl_file\n    )\n    # run sampler from commandline\n    if (est) {\n        if (io)\n          system(paste0(\"./sam -nox -io -ind  \",ctl_file))\n        else\n          system(paste0(\"./sam -ind  \",ctl_file))\n    }\n}\n#' @param Number of bootstraps (1=just estimation\n#' @return bootstrap control file used by sam.tpl  \n#' @author J Ianelli\n#' @export\n#' \nSetBS <- function(n=1,sam_int=c(1,1,1,1)){\n  cat(sep= \" \\n\",\n        \"# Number of bootstrap sampling\" , \n        n , \n        sam_int[1], # Number of age hauls\n        sam_int[2],\n        sam_int[3], # Number of age hauls\n        sam_int[4],\n        file = \"bs_setup.dat\"\n     )\n  }\n\nGet_LF <- function(yr){\n  #----------------------------------\n  # Create Length data\n  # Strata definitions 1, 2, 3 are A-season, B_NW, B_SE\n  #ldf <- ld %>% filter(SPECIES_CODE == 202,NMFS_AREA<540)  %>%\n  #ldf <- ld %>% filter(NMFS_AREA<540)  %>%\n  ld <- read.csv(paste0(\"imported/len\",yr,\".csv\"),as.is=T,header=F)\n  hdr_len <- read.csv(\"imported/hdr_len.csv\",as.is=T,header=F)\n  names(ld) <- hdr_len\n  #ldf <- ld %>% filter(NMFS_AREA>500)  %>%\n  ldf <- ld %>% filter(NMFS_AREA<540)  %>%\n    transmute(\n      haul = ifelse(is.na(HAUL_JOIN),PORT_JOIN,HAUL_JOIN),            # Data come from at-sea or port\n      month = month(parse_date_time(HAUL_OFFLOAD_DATE,orders=\"dmy\")), # get month on fly\n      seas = ifelse(month>5, 2, 1),                                   # Season 2 is B, uses month\n      strata = ifelse(seas==1, 1, ifelse(NMFS_AREA>519 , 2, 3)),      # Strata >519 one, < another\n      len = LENGTH, sex = ifelse(SEX==\"F\",1,2), freq = FREQUENCY,     # recodes sex etc\n      haul = as.integer(as.factor(haul))                              # Sets hauls/offloads to unique integer values\n    )\n  return(ldf)\n}\n\nWrite_LF <- function(LF.df, yr){\n    #----------------------------------\n    # Write Length data\n    # Strata definitions 1, 2, 3 are A-season, B_NW, B_SE\n    #ldf <- ld %>% filter(SPECIES_CODE == 202,NMFS_AREA<540)  %>%\n    #ldf <- ld %>% filter(NMFS_AREA<540)  %>%\n    ld <- read.csv(paste0(\"imported/len\",yr,\".csv\"),as.is=T,header=F)\n    hdr_len <- read.csv(\"imported/hdr_len.csv\",as.is=T,header=F)\n    names(ld) <- hdr_len\n    #ldf <- ld %>% filter(NMFS_AREA>500)  %>%\n    ldf <- LF.df %>% filter(NMFS_AREA<540,YEAR=yr)  %>%\n      transmute(\n        haul = ifelse(is.na(HAUL_JOIN),PORT_JOIN,HAUL_JOIN),            # Data come from at-sea or port\n        month = month(parse_date_time(HAUL_OFFLOAD_DATE,orders=\"dmy\")), # get month on fly\n        seas = ifelse(month>5, 2, 1),                                   # Season 2 is B, uses month\n        strata = ifelse(seas==1, 1, ifelse(NMFS_AREA>519 , 2, 3)),      # Strata >519 one, < another\n        len = LENGTH, sex = ifelse(SEX==\"F\",1,2), freq = FREQUENCY,     # recodes sex etc\n        haul = as.integer(as.factor(haul))                              # Sets hauls/offloads to unique integer values\n      )\n      return(ldf)\n}\nGet_Age <- function(yr)\n{\n    ad <- read.csv(paste(\"imported/age\",yr,\".csv\",sep=\"\"),as.is=T,header=F)\n    hdr_age <- read.csv(\"imported/hdr_age.csv\",as.is=T,header=F)\n    names(ad) <- hdr_age\n    #----------------------------------\n    # Age data massage names(ad) ;dim(ad)\n    # Need to filter for sample type\n    # Strata definitions 1, 2, 3 are A-season, B_NW, B_SE\n    #distinct(SPECIMEN_NUMBER) %>%\n    names(ad)\n    #adf <- ad %>% dplyr::filter(NMFS_AREA>500) %>%\n    adf <- ad %>% dplyr::filter(NMFS_AREA<540) %>%\n      dplyr::transmute(\n        haul   = ifelse(is.na(HAUL_JOIN),PORT_JOIN,HAUL_JOIN),\n        haul = as.integer(as.factor(haul)),\n        month  = month(parse_date_time(HAUL_OFFLOAD_DATE,orders=\"dmy\")),\n        seas   = ifelse(month>5, 2, 1), \n        strata = ifelse(seas==1, 1, ifelse(NMFS_AREA>519, 2, 3)), \n        sex = ifelse(SEX==\"F\",1,2) ,\n        len    = LNGTH , age = ifelse(AGE==0,-9,AGE) ,\n        wt = ifelse(is.na(WEIGHT) | WEIGHT==0,-9,WEIGHT) ) #, age = AGE ) \n      return(adf)\n }   ",
    "created" : 1502431330531.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1673764008",
    "id" : "5A8AF8BB",
    "lastKnownWriteTime" : 1502408941,
    "last_content_update" : 1502408941,
    "path" : "~/OneDrive/sampler/sampleR/R/sampler.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}